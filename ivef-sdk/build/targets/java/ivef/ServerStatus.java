/* 
 *  ServerStatus
 *
 *  ServerStatus is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by schema2code on Mon Jan 17 11:39:43 2022.
 **********************************************************************************
 *  Copyright 2010
 *
 */

package ivef;

import java.util.*;
import java.text.DecimalFormat;
import java.text.DateFormat;
import java.text.SimpleDateFormat;


public class ServerStatus { 

    private String m_contactIdentity; // default value is uninitialized
    private boolean m_contactIdentityPresent;
    private String m_details; // default value is uninitialized
    private boolean m_detailsPresent;
    private boolean m_status; // default value is uninitialized
    private boolean m_statusPresent;

    public ServerStatus() {

        m_contactIdentityPresent = false;
        m_detailsPresent = false;
        m_statusPresent = false;
    }

    public ServerStatus(ServerStatus val) {

        m_contactIdentity = val.getContactIdentity();
        if (val != null) {
            m_contactIdentityPresent = true;
        }
        m_details = val.getDetails();
        if (val != null) {
            m_detailsPresent = true;
        }
        m_status = val.getStatus();
        if (val != null) {
            m_statusPresent = true;
        }
    }

    public boolean setContactIdentity(String val) {

        if (val.length() < 1)
          return false;
        if (val.length() > 254)
          return false;
        m_contactIdentityPresent = true;
        m_contactIdentity = val;
        return true;
    }

    public String getContactIdentity() {

        return m_contactIdentity;
    }

    public boolean hasContactIdentity() {

        return m_contactIdentityPresent;
    }

    public boolean setDetails(String val) {

        if (val.length() > 50)
          return false;
        m_detailsPresent = true;
        m_details = val;
        return true;
    }

    public String getDetails() {

        return m_details;
    }

    public boolean hasDetails() {

        return m_detailsPresent;
    }

    public boolean setStatus(boolean val) {

        m_statusPresent = true;
        m_status = val;
        return true;
    }

    public boolean getStatus() {

        return m_status;
    }

    public String toXML() {

       return toXML(true);

    }

    public String toXML(boolean outputNamespace) {

        String xml = "<ServerStatus";
        if (outputNamespace) {
            xml += " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"";
            xml += " xmlns=\"http://www.iala-to-be-confirmed.org/XMLSchema/IVEF/0.2.5\"";
        };

        DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
        df.setTimeZone(TimeZone.getTimeZone("UTC"));
        DecimalFormat nf = new DecimalFormat();
        nf.setMinimumFractionDigits(6);
        nf.setGroupingSize(0);

        if ( hasContactIdentity() ) {
            xml += " ContactIdentity=\"" + encode( m_contactIdentity) + "\"";
        }
        if ( hasDetails() ) {
            xml += " Details=\"" + encode( m_details) + "\"";
        }
        if ( m_statusPresent ) {
            xml += " Status=\"" + m_status + "\"";
        } else { 
            return null; // not all required attributes have been set 
        } 
        xml += "/>\n";
        return xml;
    }

    public String toString(String lead) {

        String str = lead + "ServerStatus\n";
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
        df.setTimeZone(TimeZone.getTimeZone("UTC"));
        DecimalFormat nf = new DecimalFormat();
        nf.setMinimumFractionDigits(6);
        nf.setGroupingSize(0);

        if ( hasContactIdentity() ) {
            str +=  lead + "    ContactIdentity = " + m_contactIdentity + "\n";
        }
        if ( hasDetails() ) {
            str +=  lead + "    Details = " + m_details + "\n";
        }
            str +=  lead + "    Status = " + m_status + "\n";
        return str;
    }
    public String encode( String str) {

        str = str.replaceAll("&", "&amp;");
        str = str.replaceAll("<", "&lt;");
        str = str.replaceAll(">", "&gt;");
        str = str.replaceAll("\"", "&quot;");
        return str;
    }


}
