<?php

// 
//  Filter
//
//  Filter is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  Filter is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY ); without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//*********************************************************************************
//  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
//  Generated by schema2code on Mon Jan 17 11:39:43 2022.
//*********************************************************************************
//  Copyright 2010
//


class Filter { 

    var $m_predicate; // default value is uninitialized
    var $m_predicatePresent;

    public function Filter() {

        date_default_timezone_set('UTC');
        $this->m_predicatePresent = false;
    }

    public function setPredicate( $val ) {

        if (strlen ($val) < 1)
            return false;
        if (strlen ($val) > 1024)
            return false;
        $this->m_predicatePresent = true;
        $this->m_predicate = $val;
        return true;
    }

    public function getPredicate() {

        return $this->m_predicate;
    }

    public function toXML($outputNamespace = true) {

        if ($outputNamespace)
        {
            $rootNodeTag  = "<Filter";
            $rootNodeTag .= " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"";
            $rootNodeTag .= " xmlns=\"http://www.iala-to-be-confirmed.org/XMLSchema/IVEF/0.2.5\"";
            $rootNodeTag .= "></Filter>";
        }
        else
            $rootNodeTag = "<Filter></Filter>";
        $xml = new SimpleXMLElement($rootNodeTag);

        if ( $this->m_predicatePresent ) {
            $xml->addAttribute('Predicate', $this->m_predicate);
        } else { 
            return ""; // not all required attributes have been set 
        } 
        return $xml->asXML();
    }

    public function toString() {

    	return $this->toStringWithLead("");
    }

    public function toStringWithLead( $lead ) {

        $str = $lead . "Filter\n";

        $str .= $lead . "    Predicate = " . $this->m_predicate . "\n";

        return $str;
    }
}
?>
