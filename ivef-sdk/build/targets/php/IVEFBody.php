<?php

// 
//  Body
//
//  Body is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  Body is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY ); without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//*********************************************************************************
//  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
//  Generated by schema2code on Mon Jan 17 11:39:43 2022.
//*********************************************************************************
//  Copyright 2010
//

require_once "IVEFLoginRequest.php";
require_once "IVEFLoginResponse.php";
require_once "IVEFLogout.php";
require_once "IVEFObjectDatas.php";
require_once "IVEFPing.php";
require_once "IVEFPong.php";
require_once "IVEFServerStatus.php";
require_once "IVEFServiceRequest.php";
require_once "IVEFServiceRequestResponse.php";

class Body { 

    var $m_loginRequest; // default value is uninitialized
    var $m_loginRequestPresent;
    var $m_loginResponse; // default value is uninitialized
    var $m_loginResponsePresent;
    var $m_logout; // default value is uninitialized
    var $m_logoutPresent;
    var $m_objectDatas; // default value is uninitialized
    var $m_objectDatasPresent;
    var $m_ping; // default value is uninitialized
    var $m_pingPresent;
    var $m_pong; // default value is uninitialized
    var $m_pongPresent;
    var $m_serverStatus; // default value is uninitialized
    var $m_serverStatusPresent;
    var $m_serviceRequest; // default value is uninitialized
    var $m_serviceRequestPresent;
    var $m_serviceRequestResponse; // default value is uninitialized
    var $m_serviceRequestResponsePresent;

    public function Body() {

        date_default_timezone_set('UTC');
        $this->m_loginRequestPresent = false;
        $this->m_loginRequest = new LoginRequest();
        $this->m_loginResponsePresent = false;
        $this->m_loginResponse = new LoginResponse();
        $this->m_logoutPresent = false;
        $this->m_logout = new Logout();
        $this->m_objectDatasPresent = false;
        $this->m_objectDatas = new ObjectDatas();
        $this->m_pingPresent = false;
        $this->m_ping = new Ping();
        $this->m_pongPresent = false;
        $this->m_pong = new Pong();
        $this->m_serverStatusPresent = false;
        $this->m_serverStatus = new ServerStatus();
        $this->m_serviceRequestPresent = false;
        $this->m_serviceRequest = new ServiceRequest();
        $this->m_serviceRequestResponsePresent = false;
        $this->m_serviceRequestResponse = new ServiceRequestResponse();
    }

    public function setLoginRequest( $val ) {

        $this->m_loginRequestPresent = true;
        $this->m_loginRequest = $val;
        return true;
    }

    public function getLoginRequest() {

        return $this->m_loginRequest;
    }

    public function hasLoginRequest() {

        return $this->m_loginRequestPresent;
    }

    public function setLoginResponse( $val ) {

        $this->m_loginResponsePresent = true;
        $this->m_loginResponse = $val;
        return true;
    }

    public function getLoginResponse() {

        return $this->m_loginResponse;
    }

    public function hasLoginResponse() {

        return $this->m_loginResponsePresent;
    }

    public function setLogout( $val ) {

        $this->m_logoutPresent = true;
        $this->m_logout = $val;
        return true;
    }

    public function getLogout() {

        return $this->m_logout;
    }

    public function hasLogout() {

        return $this->m_logoutPresent;
    }

    public function setObjectDatas( $val ) {

        $this->m_objectDatasPresent = true;
        $this->m_objectDatas = $val;
        return true;
    }

    public function getObjectDatas() {

        return $this->m_objectDatas;
    }

    public function hasObjectDatas() {

        return $this->m_objectDatasPresent;
    }

    public function setPing( $val ) {

        $this->m_pingPresent = true;
        $this->m_ping = $val;
        return true;
    }

    public function getPing() {

        return $this->m_ping;
    }

    public function hasPing() {

        return $this->m_pingPresent;
    }

    public function setPong( $val ) {

        $this->m_pongPresent = true;
        $this->m_pong = $val;
        return true;
    }

    public function getPong() {

        return $this->m_pong;
    }

    public function hasPong() {

        return $this->m_pongPresent;
    }

    public function setServerStatus( $val ) {

        $this->m_serverStatusPresent = true;
        $this->m_serverStatus = $val;
        return true;
    }

    public function getServerStatus() {

        return $this->m_serverStatus;
    }

    public function hasServerStatus() {

        return $this->m_serverStatusPresent;
    }

    public function setServiceRequest( $val ) {

        $this->m_serviceRequestPresent = true;
        $this->m_serviceRequest = $val;
        return true;
    }

    public function getServiceRequest() {

        return $this->m_serviceRequest;
    }

    public function hasServiceRequest() {

        return $this->m_serviceRequestPresent;
    }

    public function setServiceRequestResponse( $val ) {

        $this->m_serviceRequestResponsePresent = true;
        $this->m_serviceRequestResponse = $val;
        return true;
    }

    public function getServiceRequestResponse() {

        return $this->m_serviceRequestResponse;
    }

    public function hasServiceRequestResponse() {

        return $this->m_serviceRequestResponsePresent;
    }

    public function toXML($outputNamespace = true) {

        if ($outputNamespace)
        {
            $rootNodeTag  = "<Body";
            $rootNodeTag .= " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"";
            $rootNodeTag .= " xmlns=\"http://www.iala-to-be-confirmed.org/XMLSchema/IVEF/0.2.5\"";
            $rootNodeTag .= "></Body>";
        }
        else
            $rootNodeTag = "<Body></Body>";
        $xml = new SimpleXMLElement($rootNodeTag);

        if ( $this->hasLoginRequest() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_loginRequest->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasLoginResponse() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_loginResponse->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasLogout() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_logout->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasObjectDatas() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_objectDatas->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasPing() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_ping->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasPong() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_pong->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasServerStatus() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_serverStatus->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasServiceRequest() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_serviceRequest->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        if ( $this->hasServiceRequestResponse() ) {
            $dom = dom_import_simplexml($xml);
            $child_as_xml = $this->m_serviceRequestResponse->toXML(false);
            $child_as_simplexml = new SimpleXMLElement($child_as_xml);
            $child_as_dom = dom_import_simplexml($child_as_simplexml);
            $child_as_leaf = $dom->ownerDocument->importNode($child_as_dom, true);
            $dom->appendChild($child_as_leaf);
            $xml = simplexml_import_dom($dom);
        } 
        return $xml->asXML();
    }

    public function toString() {

    	return $this->toStringWithLead("");
    }

    public function toStringWithLead( $lead ) {

        $str = $lead . "Body\n";

        if ( $this->hasLoginRequest() ) {
            $str .=  $this->m_loginRequest->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasLoginResponse() ) {
            $str .=  $this->m_loginResponse->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasLogout() ) {
            $str .=  $this->m_logout->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasObjectDatas() ) {
            $str .=  $this->m_objectDatas->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasPing() ) {
            $str .=  $this->m_ping->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasPong() ) {
            $str .=  $this->m_pong->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasServerStatus() ) {
            $str .=  $this->m_serverStatus->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasServiceRequest() ) {
            $str .=  $this->m_serviceRequest->toStringWithLead($lead . "    ") ;
        }
        if ( $this->hasServiceRequestResponse() ) {
            $str .=  $this->m_serviceRequestResponse->toStringWithLead($lead . "    ") ;
        }

        return $str;
    }
}
?>
